<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Lm0BGe3j0FoAAAAASUVORK5CYII=
</value>
  </data>
</root>